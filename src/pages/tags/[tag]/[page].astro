---
import { type CollectionEntry, getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import i18next, { t, changeLanguage } from "i18next";
import { getPostsByLang } from "@utils/getPosts";

changeLanguage("en");

export interface Props {
    post: CollectionEntry<"blog">;
    tag: string;
    tagName: string;
}
export async function getStaticPaths() {
    const posts = await getPostsByLang(i18next.language);
    const tags = getUniqueTags(posts);
    return tags.flatMap(({ tag, tagName }) => {
        const tagPosts = getPostsByTag(posts, tag);
        const totalPages = getPageNumbers(tagPosts.length);
        return totalPages.map(page => ({
            params: { tag, page },
            props: { tag, tagName },
        }));
    });
}
const { page } = Astro.params;
const { tag } = Astro.props;
const posts = await getPostsByLang(i18next.language);
const postsByTag = getPostsByTag(posts, tag);
const pagination = getPagination({
    posts: postsByTag,
    page,
});
---

<TagPosts {...pagination} {tag} tagName={t(`tags:${tag}`)} />
