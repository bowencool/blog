---
import { type CollectionEntry, getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getUniqueTags, { type Tag } from "@utils/getUniqueTags";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import i18next, { t, changeLanguage } from "i18next";
import { getPostsByLang } from "@utils/getPosts";

changeLanguage("en");

export interface Props {
    post: CollectionEntry<"blog">;
    tag: Tag;
}
export async function getStaticPaths() {
    const posts = await getPostsByLang(i18next.language);
    const tags = getUniqueTags(posts);
    return tags.flatMap(tag => {
        const totalPages = getPageNumbers(tag.posts.length);
        return totalPages.map(page => ({
            params: { tag: tag.slug, page },
            props: { tag },
        }));
    });
}
const { page } = Astro.params;
const { tag } = Astro.props;
const postsByTag = tag.posts;
const pagination = getPagination({
    posts: postsByTag,
    page,
});
---

<TagPosts {...pagination} {tag} />
