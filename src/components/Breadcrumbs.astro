---
import i18next, { t } from "i18next";
import { localizePath } from "astro-i18next";
// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname
  .replace(/\/+$/, "")
  .replace(/^\/zh/, "");

// Get url array from path
// eg: /tags/tailwindcss => ['tags', 'tailwindcss']
const breadcrumbList = currentUrlPath.split("/").slice(1);

// if breadcrumb is Home > Posts > 1 <etc>
// replace Posts with Posts (page number)
// breadcrumbList[0] === "posts" &&
//   breadcrumbList.splice(
//     0,
//     2,
//     `${t("posts")} (${t("page{{n}}", { n: breadcrumbList[1] || 1 })})`
//   );
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href={localizePath(`/`)}>{t("home")}</a>
    </li>
    {
      breadcrumbList.map((breadcrumb, index) => {
        if (breadcrumb.match(/^\d+$/)) {
          return (
            <li>
              <span aria-current="page">
                {t("page{{n}}", { n: breadcrumb })}
              </span>
            </li>
          );
        }
        if (breadcrumbList[0] === "tags" && index > 0) {
          return (
            <li>
              <a href={localizePath(`/tags/${breadcrumb}`)}>{t(`tags:${breadcrumb}`)}</a>
            </li>
          );
        }
        return (
          <li>
            <a href={localizePath(`/${breadcrumb}`)}>{t(breadcrumb)}</a>
          </li>
        );
      })
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mb-1 mt-8 w-full max-w-3xl px-4;
    a {
      @apply capitalize opacity-70 hover:opacity-100;
    }
    span {
      @apply opacity-70;
    }
    li {
      @apply inline;
      &:not(:last-child) {
        &::after {
          content: ">";
          @apply ml-1 opacity-70;
        }
      }
    }
  }
</style>
