---
import { SITE } from "@config";
import "@styles/base.css";
import { ViewTransitions } from "astro:transitions";
import i18next, { t, changeLanguage } from "i18next";
import { HeadHrefLangs } from "astro-i18next/components";
// import { GoogleFontsOptimizer } from "astro-google-fonts-optimizer";
// import { GoogleAnalytics } from 'astro-analytics';
const pathname = Astro.url.pathname;
// make this works with md file routes
if (pathname.startsWith("/zh")) {
  changeLanguage("zh");
} else {
  changeLanguage("en");
}

export interface Props {
  title?: string;
  author?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

let {
  author = t("websiteAuthor"),
  title = t("websiteTitle"),
  description = t("websiteDescription"),
  ogImage = SITE.ogImage,
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
  pubDatetime,
  modDatetime,
  scrollSmooth = true,
} = Astro.props;

if (!title?.endsWith(t("websiteTitle"))) {
  title = `${title} | ${t("websiteTitle")}`;
}

const socialImageURL = new URL(ogImage || "og.png" /* auto generated */, Astro.url.origin).href;
---

<!doctype html>
<html lang={i18next.language} class={`${scrollSmooth && "scroll-smooth"}`}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <!-- <link rel="manifest" href="/site.webmanifest"> -->

    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <HeadHrefLangs />
    {pubDatetime && <meta property="article:published_time" content={pubDatetime.toISOString()} />}
    {modDatetime && <meta property="article:modified_time" content={modDatetime.toISOString()} />}

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Page-specific Meta Tags -->
    <slot name="meta" />
    <meta name="theme-color" media="(prefers-color-scheme: light)" content="rgb(251, 254, 251)" />
    <meta name="theme-color" media="(prefers-color-scheme: dark)" content="rgb(33, 39, 55)" />

    <ViewTransitions />
  </head>
  <body>
    <slot />
    {
      import.meta.env.PROD && (
        <>
          <script defer src="https://us.umami.is/script.js" data-website-id="42b1c8f4-941e-4707-81b4-fbbefce5e3f0" />
          <script
            defer
            src="https://beamanalytics.b-cdn.net/beam.min.js"
            data-token="d42e83e4-3397-4b96-9a6f-b740d481db9a"
          />
        </>
      )
    }
  </body>
</html>
